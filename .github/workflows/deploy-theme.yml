name: Build and Release Theme

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build theme
        run: npm run build

      - name: Get theme version from style.css
        id: get_version
        run: |
          VERSION=$(grep -i 'Version:' style.css | awk '{ print $2 }')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Package theme and create versioned release zip
        run: |
          # ðŸ”¥ Clean up previous build artifacts
          rm -rf final *.zip

          # âœ… Create target folder
          mkdir -p final/advancedcare

          # âœ… Copy all files into the correct structure
          rsync -av --exclude=".git*" --exclude=".github" --exclude="node_modules" \
            --exclude="*.zip" --exclude="*.log" --exclude="*.DS_Store" --exclude="__MACOSX" \
            --exclude="final" \
            ./ final/advancedcare

          # âœ… Force copy style.css in case rsync skipped it
          cp style.css final/advancedcare/style.css

          # âœ… Normalize permissions
          cd final
          find . -type d -exec chmod 755 {} \;
          find . -type f -exec chmod 644 {} \;

          # âœ… Create versioned zip one level up
          cd ..
          zip -r advancedcare-v${{ steps.get_version.outputs.version }}.zip final/advancedcare

      - name: Verify zip integrity
        run: unzip -t advancedcare-v${{ steps.get_version.outputs.version }}.zip

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          files: advancedcare-v${{ steps.get_version.outputs.version }}.zip
